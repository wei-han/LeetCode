class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        
        if (nums.size() < 4) return ans;
        std::sort(nums.begin(), nums.end());

        for (int i = 0; i < nums.size() - 3; i++)
        {
            for (int j = i + 1; j < nums.size() - 2; j++)
            {
                int front = j+1;
                int back = nums.size() - 1;
                int sum = target - nums[i] - nums[j];
                while (front < back)
                {
                    if(nums[front] + nums[back] < sum)
                        front++;
                    
                    else if (nums[front] + nums[back] > sum)
                        back--;
                    
                    else
                        {
                            vector<int> four(4,0);
                            four[0] = nums[i];
                            four[1] = nums[j];
                            four[2] = nums[front];
                            four[3] = nums[back];
                            
                            ans.push_back(four);
                            
                            while(front < back && nums[front] == four[2]) front++;
                            
                            while(front < back && nums[back] == four[3]) back--;
                         }
                }
                
                while(j < nums.size() - 2 && nums[j+1] == nums[j]) j++;
            }
            while(i < nums.size() - 3 && nums[i+1] == nums[i]) i++;
        }
        return ans;
    }
};

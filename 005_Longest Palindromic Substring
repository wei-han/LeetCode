class Solution
{
public:
    string longestPalindrome(string s) 
    {
        if (s.size() == 0)
            return "";
        
        if (s.size() == 1)
            return s;
            
        int min_start = 0;
        int max_length = 1;
        
        for (int i = 0; i < s.size();)
        {
            if (s.size() - i <= max_length / 2) break;

            int start = i, end =i;
            while (end < s.size()-1 && s[end]==s[end+1])\\skip duplicate
            {
                end++;
            }
            
            i = end + 1;
            
            while (end < s.size()-1 && start > 0 && s[end + 1] == s[start - 1])\\expand
            {
                end++;
                start--;
            }
            int length = end - start + 1;
            if (length > max_length)
                {
                    max_length = length;
                    min_start = start;
                }
        }
        return s.substr(min_start, max_length);
    }
};
